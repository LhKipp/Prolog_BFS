cmake_minimum_required(VERSION 3.10)
project(prolog_bfs)

# set where the build output should go
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)

set(CMAKE_CXX_STANDARD 17)

# this is not required anymore because of -s USE_BOOST_HEADERS=1 flag
#FIND_PACKAGE(Boost REQUIRED )
#INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIR} )

file(GLOB_RECURSE prolog_bfs_src
    "src/util/*.h"
    "src/util/*.cpp"
    "src/wam/*.h"
    "src/wam/*.cpp"
)

add_executable(prolog_bfs wasm.cpp ${prolog_bfs_src})

# no need to mention boost libs anymore because of -s USE_BOOST_HEADERS=1
TARGET_LINK_LIBRARIES( prolog_bfs LINK_PUBLIC )

##########################
# compile and link options
##########################

# FLAG EXPLANATION
# --bind enable embind
# --emrun optimize for use with emrun (server to run the code)
# DISABLE_EXCEPTION_CATCHING=0 to allow exceptions *within* the c++ code to be caught.
#   Exceptions are disabled by default because of performance. We need them though.
# USE_BOOST_HEADERS=1 automatically retrieve the boost headers 

# compile flags @todo: this COMPILE_FLAGS is deprecated. convert this to target_compile_options
set_target_properties(prolog_bfs PROPERTIES COMPILE_FLAGS "-s USE_BOOST_HEADERS=1 -s DISABLE_EXCEPTION_CATCHING=0")

# linker flags
set_target_properties(prolog_bfs PROPERTIES LINK_FLAGS "--bind --emrun -s TOTAL_MEMORY=500MB -s USE_BOOST_HEADERS=1 -s DISABLE_EXCEPTION_CATCHING=0")